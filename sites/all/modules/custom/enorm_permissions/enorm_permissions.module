<?php
/**
 * Implements hook_node_view_alter().
 */
function enorm_permissions_node_view_alter(&$build)
{
    if ($build['#bundle'] === 'content_type_project') {
        $node = node_load(arg(1));
        $project_id_milestone = $node->field_project_teamleader_id['und'][0]['value'];
        $nid = $node->nid;
        $date = node_last_changed($nid);
        $readable_date = date('d-m-Y', $date);
        $today = date('d-m-Y');
        $difference = strtotime($today) - strtotime($readable_date);
        $days_changed = round($difference / (60 * 60 * 24));
        if ($days_changed >= 3) {
            enorm_permissions_delete_old_milestones($nid);
            enorm_crons_milestone_processor($project_id_milestone, $nid);
            enorm_permissions_update_last_changed($nid);
        }
        $data = enorm_companies_get_teamleader_project_info($build['field_project_teamleader_id']['#items'][0]['value']);
        if ($data['data']['description'] != NULL) {
            $build['field_project_description'][0]['#markup'] = $data['data']['description'];
        } else {
            $build['field_project_description'][0]['#markup'] = t("No description entered in Teamleader.");
        }
        $build['field_project_start_date'][0]['#markup'] = $data['data']['starts_on'];
        $build['field_project_end_date'][0]['#markup'] = $data['data']['due_on'];
        $build['field_project_status'][0]['#markup'] = enorm_permissions_status_cleanup($data['data']['status']);
        $participants = "";
        foreach ($data['data']['participants'] as $value) {
            $result = enorm_companies_get_teamleader_user_name($value['participant']['id']);
            if ($result['data']['avatar_url'] != NULL) {
                $participants = $participants . "<div id='participant-container'><img src='" . $result['data']['avatar_url'] . "' class='teamleader-avatar'><br>" . $result['data']['first_name'] . " " . $result['data']['last_name'] . "<br>" . enorm_permissions_role_cleanup($value['role']) . "</div>";
            } else {
                $participants = $participants . "<div id='participant-container'><img src='/sites/all/themes/enorm/assets/img/no-profile-picture.png' class='teamleader-avatar'><br>" . $result['data']['first_name'] . " " . $result['data']['last_name'] . "<br>" . enorm_permissions_role_cleanup($value['role']) . "</div>";
            }
        }
        $build['field_project_participants'][0]['#markup'] = $participants;

    } elseif ($build['#bundle'] === 'content_type_callback_request') {
        $company_id = $build['field_callback_request_company']['#items'][0]['value'];
        $project_id = $build['field_callback_request_project'][0]['#markup'];
        $data = enorm_companies_get_company_info($company_id);
        $project_data = enorm_companies_get_teamleader_project_info($project_id);
        $responsible_user = enorm_companies_get_teamleader_user_name($data['data']['responsible_user']['id']);
        $build['field_callback_request_company'][0]['#markup'] = $data['data']['name'];
        $build['field_callback_request_project'][0]['#markup'] = $project_data['data']['title'];
        $build['field_callback_account_manager'][0]['#markup'] = "<img class='teamleader-avatar' src='" . $responsible_user['data']['avatar_url'] . "'><br>" . $responsible_user['data']['first_name'] . " " . $responsible_user['data']['last_name'];
        if (!empty($data['data']['telephones'][0]['number'])) {
            $build['field_callback_phone_number'][0]['#markup'] = $data['data']['telephones'][0]['number'];
        }
    }
}

function enorm_permissions_status_cleanup($status)
{
    switch ($status) {
        case 'done':
            return "<span style='color:#009688;'>Done</span>";
            break;
        case 'on_hold':
            return "<span style='color:#FF9800;'>On hold</span>";
            break;
        case 'active':
            return "<span style='color:#8BC34A'>Active</span>";
            break;
        case 'cancelled':
            return "<span style='color:#F44336'>Cancelled</span>";
            break;
    }
}

function enorm_permissions_role_cleanup($role)
{
    switch ($role) {
        case 'decision_maker':
            return '<span style="color: #009688;">(Chief)</span>';
            break;
        case 'member':
            return '(Participant)';
            break;
    }
    return 'No roles';
}

/*
 * Make admin role unavailable. Customer role also unavailable from normal user form.
 */

function enorm_permissions_form_user_register_form_alter(&$form, &$form_state, $form_id)
{
    $form['account']['roles'][3]['#access'] = FALSE;
    $form['account']['roles'][4]['#access'] = FALSE;
    $current_path = current_path();
    if ($current_path === 'admin/people/p2rp-create/customer') {
        $form['account']['roles'][3]['#access'] = FALSE;
        $form['account']['roles'][4]['#access'] = TRUE;
        $form['account']['roles'][5]['#access'] = FALSE;
        $form['account']['roles'][6]['#access'] = FALSE;
        $form['account']['roles'][7]['#access'] = FALSE;
        $form['account']['roles'][8]['#access'] = FALSE;
        $form['account']['roles'][9]['#access'] = FALSE;
        $form['account']['roles'][10]['#access'] = FALSE;
    }
}

/*
 * Custom and global functions
 */

/**
 * Implements hook_node_access().
 * It looks for the target ID of entity references in both the content and the users profile.
 * It references to
 */
function enorm_permissions_node_access($node, $op, $account)
{
    if (!is_string($node)) {
        if ($node->type === 'content_type_project') {
            $role_keys = array_keys($account->roles);
            if (in_array('4', $role_keys)) {
                $profile2 = profile2_load_by_user($account->uid);
                $entity_id = $profile2['profile_type_klant']->field_profile_customer_company['und'][0]['target_id'];
                $result = enorm_permissions_entity_load($entity_id);
                $teamleader_id = $result->field_company_teamleader_id['und'][0]['value'];
                if (!empty($node->field_project_company_id['und'][0]['value'])) {
                    $teamleader_id_node = $node->field_project_company_id['und'][0]['value'];
                } else {
                    return NODE_ACCESS_DENY;
                }
                if ($op == "view") {
                    if ($teamleader_id === $teamleader_id_node) {
                        return NODE_ACCESS_ALLOW;
                    } else {
                        return NODE_ACCESS_DENY;
                    }
                } else {
                    return NODE_ACCESS_IGNORE;
                }
            } else {
                return NODE_ACCESS_IGNORE;
            }
        } elseif ($node->type === 'drive_link') {
            $role_keys = array_keys($account->roles);
            if (in_array('4', $role_keys)) {
                $profile2 = profile2_load_by_user($account->uid);
                $profile_group_id = $profile2['profile_type_klant']->field_profile_customer_company['und'][0]['target_id'];
                if (!is_string($node)) {
                    $node_group_id = $node->field_drive_link_customer['und'][0]['target_id'];
                };
                if ($op == "view") {
                    $access_value = $node->field_drive_link_visibility['und'];
                    $access_value_clean = array();
                    foreach ($access_value as $key => $value) {
                        array_push($access_value_clean, $value['value']);
                    }
                    $result = array_intersect($role_keys, $access_value_clean);
                    if (!empty($result) && $profile_group_id === $node_group_id) {
                        return NODE_ACCESS_ALLOW;
                    } else {
                        return NODE_ACCESS_DENY;
                    }
                } else {
                    return NODE_ACCESS_IGNORE;
                }
            } else {
                return NODE_ACCESS_IGNORE;
            }
        } elseif ($node->type === 'content_type_invoice') {
            $role_keys = array_keys($account->roles);
            if (in_array('4', $role_keys)) {
                $profile2 = profile2_load_by_user($account->uid);
                $entity_id = $profile2['profile_type_klant']->field_profile_customer_company['und'][0]['target_id'];
                $result = enorm_permissions_entity_load($entity_id);
                $profile_company_id = $result->field_company_teamleader_id['und'][0]['value'];
                $teamleader_id = $node->field_invoice_company_id['und'][0]['value'];
                if ($profile_company_id === $teamleader_id) {
                    return NODE_ACCESS_ALLOW;
                } else {
                    return NODE_ACCESS_DENY;
                }

            } else {
                return NODE_ACCESS_IGNORE;
            }
        }
    }
}

function enorm_permissions_entity_load($entity_id)
{
    return @entity_load_single('node', $entity_id);
}

function enorm_permissions_views_pre_render(&$view)
{
    // Check view name and then unset results if not accessible.
    if ($view->name == 'view_my_projects') {
        global $user;
        $profile2 = profile2_load_by_user($user->uid);
        $customer_group_id = $profile2['profile_type_klant']->field_customer_profile_group['und'][0]['target_id'];
        foreach ($view->result as $key => $result) {
            if ($result->field_field_group_project_customer[0]['raw']['target_id'] != $customer_group_id) {
                unset($view->result[$key]);
            }
        }
        // Hide exposed filters when view is empty.
        if (empty($view->result)) {
            $view->exposed_widgets = NULL;
        }
    }
    // Check view name and then unset results if not accessible.
    if ($view->name == 'views_customer_my_files' || $view->name == 'view_all_projects_nodes' || $view->name == 'view_all_invoices') {
        $x = 0;
        foreach ($view->result as $key => $result) {
            $node = @node_load($result->nid);
            if (!node_access('view', $node)) {
                unset($view->result[$key]);
            } else {
                $x++;
            }
        }
        // Hide exposed filters when view is empty.
        if (empty($view->result)) {
            $view->exposed_widgets = NULL;
        }
        // Update pager, because its rendered before adjusting our results.
//        $view->query->pager->total_items = $x;
//        $view->query->pager->update_page_info();
    }
    // Same logic as above but different fields because it renders entities and not tables or fields.
    if ($view->name == 'search_view') {
        foreach ($view->result as $key => $result) {
            $node = node_load($result->entity);
            if (!node_access('view', $node)) {
                unset($view->result[$key]);
            }
        }
    }
}

function enorm_permissions_delete_old_milestones($nid)
{
    $result = db_select('teamleader_milestones', 'tm')
        ->fields('tm')
        ->condition('teamleader_milestone_nid', $nid, '=')
        ->execute()
        ->fetchAll();
    foreach ($result as $value) {
        $num_deleted = db_delete('node')
            ->condition('nid', $value->teamleader_milestone_own_nid)
            ->execute();
        $deleted = db_delete('teamleader_milestones')
            ->condition('teamleader_milestone_own_nid', $value->teamleader_milestone_own_nid)
            ->execute();
    }
}

function enorm_permissions_update_last_changed($nid)
{
    $node = node_load($nid);
    $node_wrapper = entity_metadata_wrapper('node', $node);
    $node_wrapper->log->set('updated');
    $node_wrapper->save();
}
































