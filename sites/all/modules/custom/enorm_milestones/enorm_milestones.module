<?php

function enorm_milestones_get_info($id)
{
    $operation = "milestones.list";
    $postfields = "{
      \"filter\": {
        \"project_id\": \"" . $id . "\"
      },
      \"page\": {
        \"size\": 100,
        \"number\": 1
      },
      \"sort\": [
        {
          \"field\": \"due_on\",
          \"order\": \"desc\"
        }
      ]
    }";
    return enorm_teamleader_call($operation, $postfields);
}

function enorm_milestones_block_info()
{
    $blocks['enorm_milestones'] = array(
        'info' => t('Enorm Milestones'),
        'cache' => DRUPAL_CACHE_PER_ROLE,
    );
    return $blocks;
}

/**
 * Implements hook_block_view().
 */
function enorm_milestones_block_view($delta = '')
{
    $block = array();
    switch ($delta) {
        case 'enorm_milestones':
            $block['subject'] = t('Enorm Milestones');
            $block['content'] = array(
                '#markup' => enorm_milestones_get_milestones_block(),
            );
            break;
    }
    return $block;
}

function enorm_milestones_get_milestones_block()
{
    if (arg(0) == 'node') {
        $nid = arg(1);
        $result = db_select('teamleader_milestones', 'tm')
            ->fields('tm')
            ->condition('teamleader_milestone_nid', $nid, '=')
            ->execute()
            ->fetchAllAssoc('teamleader_milestone_own_nid');
        $returnable = "<div id='block-enorm-milestones-custom'><h3><span>Milestones</span></h3>";
        ksort($result);
        $open = 0;
        $closed = 0;
        $timetracking = 0;
        foreach ($result as $value) {
            $own_nid = $value->teamleader_milestone_own_nid;
            $node = node_load($own_nid);
            $milestone_id = $node->field_milestone_id['und'][0]['value'];
            $timetracking += enorm_milestones_get_timetracking($milestone_id);
            if ($node->field_milestone_status['und'][0]['value'] === 'open') {
                $open++;
            } else {
                $closed++;
            }
            $returnable = $returnable . $node->title . ", status: " . $node->field_milestone_status['und'][0]['safe_value'] . ". Due on: " . $node->field_milestone_due['und'][0]['value'] . ".<br>";
        }
        $data = node_load($nid);
        $title = $data->title;
        $company_id = $data->field_project_company_id['und'][0]['value'];
        $project_id = $data->field_project_teamleader_id['und'][0]['value'];
        $returnable = $returnable . "</div>";
        $total = $closed + $open;
        $percentage = floor($closed / $total * 100);
        $form_render = drupal_get_form('enorm_milestones_form', $company_id, $project_id, $title);
        if (variable_get('milestones_contact_enable') === 1) {
            if(empty(enorm_milestones_check_callback($project_id))){
                if ($percentage >= 75 && $total > 2) {
                    $returnable = $returnable . "<div id='timetracking-container'><h3> " . floor($timetracking) . "</h3>" . t("hours tracked to milestones. No rights can be derived from this indication.") . "</div>'<div id='absolute-done'><h3>" . $closed . "/" . $total . "</h3>". t("milestones closed.") . "</div><div class='percentage-done-hidden'>" . $percentage . "%</div><div class='project-expiring'><p>" . variable_get('milestones_contact_message') . "</p>" . drupal_render($form_render) . "</div>";
                } else {
                    $returnable = $returnable . "<div id='timetracking-container'><h3> " . floor($timetracking) . "</h3>" . t("hours tracked to milestones. No rights can be derived from this indication.") . "</div><div id='absolute-done'><h3>" . $closed . "/" . $total . "</h3>". t("milestones closed.") . "</div><div class='percentage-done-hidden'>" . $percentage . "%</div>";
                }
            }
            else {
                $returnable = $returnable . "<div id='timetracking-container'><h3> " . floor($timetracking) . "</h3>" . t("hours tracked to milestones. No rights can be derived from this indication.") . "</div>'<div id='absolute-done'><h3>" . $closed . "/" . $total . "</h3>". t("milestones closed.") . "</div><div class='percentage-done-hidden'>" . $percentage . "%</div><div class='project-expiring'><h2>" . t('Thank you!') . "</h2><br><p>" . t('We will be in touch soon.') . "</p<</div>";
            }
        }
        else {
            $returnable = $returnable . "<div id='timetracking-container'><h3> " . floor($timetracking) . "</h3>" . t("hours tracked to milestones. No rights can be derived from this indication.") . "</div><div id='absolute-done'><h3>" . $closed . "/" . $total . "</h3>". t("milestones closed.") . "</div><div class='percentage-done-hidden'>" . $percentage . "%</div>";
        }
        return $returnable;
    };
}

function enorm_milestones_get_timetracking($milestone_id) {
    $operation = "timeTracking.list";
    $postfields = "{
      \"filter\": {
        \"subject\": {
          \"type\": \"milestone\",
          \"id\": \"" . $milestone_id . "\"
        }
      },
      \"page\": {
        \"size\": 99,
        \"number\": 1
      },
      \"sort\": [
        {
          \"field\": \"started_on\",
          \"order\": \"desc\"
        }
      ]
    }";
    $result = enorm_teamleader_call($operation, $postfields);
    $timeTotal = 0;
    foreach ($result['data'] as $value) {
        $timeTotal += $value['duration'];
    }
    $timeTotal = $timeTotal / 60 / 60;
    return $timeTotal;
}

function enorm_milestones_admin()
{
    $form = array();

    $form['milestones_contact_enable'] = array(
        '#type' => 'checkbox',
        '#title' => t('Enable contact message on milestone overview'),
        '#description' => t('Display a contact me message when the open milestones are 1 or less'),
        '#required' => FALSE,
        '#default_value' => variable_get('milestones_contact_enable', TRUE),
    );

    $form['milestones_contact_message'] = array(
        '#type' => 'textfield',
        '#title' => t('Message to be displayed'),
        '#description' => t('The message that is to be displayed when milestones are 1 or less'),
        '#required' => FALSE,
        '#size' => 60,
        '#maxlength' => 255,
        '#default_value' => variable_get('milestones_contact_message', 'It seems we"re down to the last milestone. Would you like to talk about possible opportunities over a cup of coffee?'),
    );

    return system_settings_form($form);
}

function enorm_milestones_menu()
{
    $items = array();

    $items['admin/settings/enorm_milestones'] = array(
        'title' => 'Enorm Milestones module settings',
        'description' => 'Control the contact me message on milestones overview',
        'page callback' => 'drupal_get_form',
        'page arguments' => array('enorm_milestones_admin'),
        'access arguments' => array('administer enorm milestones settings'),
        'type' => MENU_NORMAL_ITEM,
    );

    return $items;
}

/**
 * Implements hook_form().
 */
function enorm_milestones_form($form, &$form_state, $company, $project, $title)
{
    $form['company'] = array(
        '#type' => 'hidden',
        '#value' => $company,
    );
    $form['project'] = array(
        '#type' => 'hidden',
        '#value' => $project,
    );
    $form['title'] = array(
        '#type' => 'hidden',
        '#value' => $title,
    );
    $form['submit_button'] = array(
        '#type' => 'submit',
        '#value' => t('Yes, call me!'),
    );

    return $form;
}

function enorm_milestones_form_validate($form, &$form_state) {
    return TRUE;
}

function enorm_milestones_form_submit($form, &$form_state) {
    $form_state['redirect'] = FALSE;
    global $user;
    $node = new stdClass();
    $node->title = $form['title']['#value'];
    $node->type = "content_type_callback_request";
    $node->language = 'en';
    $node->uid = $user->uid;
    $node->status = 1;
    $node->promote = 0;
    $node->field_callback_request_company[LANGUAGE_NONE][0]['value'] = $form['company']['#value'];
    $node->field_callback_request_project[LANGUAGE_NONE][0]['value'] = $form['project']['#value'];
    node_object_prepare($node);
    $node = node_submit($node); // Prepare node for saving
    node_save($node);
}

function enorm_milestones_check_callback($project_id) {
    $result = db_select('field_data_field_callback_request_project', 'fd')
        ->fields('fd')
        ->condition('field_callback_request_project_value', $project_id, '=')
        ->execute()
        ->fetchAssoc();
    return $result;
}